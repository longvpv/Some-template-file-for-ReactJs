{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { actionTypes } from './actions';\nconst initializeState = {\n  dynamicLoading: {}\n};\nexport default function reducer(state = initializeState, action) {\n  const {\n    dynamicLoading\n  } = state;\n\n  switch (action.type) {\n    case actionTypes.SET_DYNAMIC_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dynamicLoading: _objectSpread(_objectSpread({}, dynamicLoading), {}, {\n          [action.field]: action.loading\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Long/CODE/ERP/erp.webapp/redux/dynamic/reducer.tsx"],"names":["actionTypes","initializeState","dynamicLoading","reducer","state","action","type","SET_DYNAMIC_LOADING","field","loading"],"mappings":";;;;;;AAEA,SAASA,WAAT,QAA4B,WAA5B;AAEA,MAAMC,eAA6B,GAAG;AACpCC,EAAAA,cAAc,EAAE;AADoB,CAAtC;AAIA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGH,eAAzB,EAA0CI,MAA1C,EAAuD;AACpE,QAAM;AAAEH,IAAAA;AAAF,MAAqBE,KAA3B;;AACA,UAAQC,MAAM,CAACC,IAAf;AACE,SAAKN,WAAW,CAACO,mBAAjB;AACE,6CACKH,KADL;AAEEF,QAAAA,cAAc,kCACTA,cADS;AAEZ,WAACG,MAAM,CAACG,KAAR,GAAgBH,MAAM,CAACI;AAFX;AAFhB;;AAQF;AACE,aAAOL,KAAP;AAXJ;AAaD","sourcesContent":["import DynamicState from \"../../@types/dynamic/dynamicState\";\r\n\r\nimport { actionTypes } from './actions'\r\n\r\nconst initializeState: DynamicState = {\r\n  dynamicLoading: {}\r\n}\r\n\r\nexport default function reducer(state = initializeState, action: any) {\r\n  const { dynamicLoading } = state;\r\n  switch (action.type) {\r\n    case actionTypes.SET_DYNAMIC_LOADING:\r\n      return {\r\n        ...state,\r\n        dynamicLoading: {\r\n          ...dynamicLoading,\r\n          [action.field]: action.loading\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}